#include <iostream>

#include <thread>
 
class Something {
   private:
    std::string name_ = "Anonymous";
    std::string* name = &name_;
    const std::string& get_name() const { return *name; }

   public:
    void print() const {
        std::cout << name_ << std::endl;
    }

    explicit Something(const std::string& name) : name_(name) {}

    void do_something() const {
         
         
        int i = 7;
         
        std::cerr << (i / 2.0) * 7 << std::endl;  

        std::cout << this << std::endl;  

        std::this_thread::sleep_for(std::chrono::seconds(1));

        std::cout << this << std::endl;

         
        std::cerr << &Something::do_something << ": " << this << std::endl;  
    }
};

Something a_thing("This thing does not really do anything");
a_thing.print();
a_thing.do_something();

std::cerr << "This is another thing.\n";
std::this_thread::sleep_for(std::chrono::seconds(1));
 
int main() {
    Something a;
    a.do_something();
}
