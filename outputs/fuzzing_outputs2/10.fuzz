#include <iostream>
int main() { int *p = nullptr; *p = 42; return 0; }



#include C\*/ 1.5 # if def DEF; {   return  42   # endif #endif /

7
## Use
1# For conditions that you need to validate but don\'t have the
reasoning to implement; or code to check assumptions but have been implemented prior
- To be careful about adding checks like
do(check()). Use conditions and test execution to verify code before deployment even
on low powered testing equipment. 
 #1. #define def

 def (void fundef)  function
endfun
 /else /if DEF=foo # endif # 

 if DEF # def DEF=DEF # print(str(\"if\")); printdef= #endif 


 # 
2
 
8 # use the same keyword as #
define keyword is forbidden for gcc's # use # with if for 
 define(undef) 


 # 



 def(char(f_name),#
 print( \"print_name \" f_name);


	return 0  ;


  }
















 function
function_name ();

   var_type v= v_in ;	 
 # varv = get type in
return;

5



`include \"header\\function08_09.h# 


