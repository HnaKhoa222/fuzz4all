#include <iostream>
int main() { int *p = nullptr; *p = 42; return 0; }
  *   *int p = new*char[strlen("p")]; *char*tmp, i="t", j[1'1]; { switch ( tmp ) { case j = true_literal_? "t 6\0"
                                              : "t 52\\" "y\f 1';
    (a; b)
    1. If either the template declaration (template C<int int_>) of C needs template instantiation (a1<> in 476,5-53) this is most likely going to have type double (type instantiation error "not type-valid") which likely will need recompilation of B but if it can be checked before run time then no point bother building either template if so */ (
a  <=== template "temp(7)\": [line=3 col=0-280], expected 1 0   type
  */ } printf("x"); } } }else { case int 0  *  
    2 <=== [line=5 col=0-914-type], unknown template parameter  54f21, undefined
 } return p1 + strspn, (const char *const char[],int){ };
 
inline
```<issue_closed>